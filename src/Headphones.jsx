/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, forwardRef, useEffect } from "react";
import {
  useGLTF,
  MeshTransmissionMaterial,
  Caustics,
  MeshRefractionMaterial,
} from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { MeshBasicMaterial } from "three";

export default function Headphones(props) {

  const { nodes, materials } = useGLTF(props.model);
  const modelRef = useRef();
  const blobRef = useRef();
  const blobGroup = useRef();



  useEffect(() => {
    blobRef.current.geometry.computeBoundingBox();
    // const boundingBox = blobRef.current.geometry.boundingBox;
    // console.log(boundingBox)
    // const center = boundingBox.getCenter();
    // blobRef.current.geometry.translate(-center.x, -center.y, -center.z);


  })

  useFrame((state, delta) => {
    // modelRef.current.rotation.y += 0.005;
    blobRef.current.rotation.x += 0.02;
  });

  return (
    <group ref={modelRef} {...props} dispose={null}>
      <mesh
        name="base"
        castShadow
        receiveShadow
        geometry={nodes.base.geometry}
        material={materials["Material.001"]}
        position={[-0.025, 1.077, 0]}
        scale={[0.164, 0.15, 0.369]}
      />

      <mesh
        name="glass"
        castShadow
        receiveShadow
        geometry={nodes.glass.geometry}
        rotation={[-Math.PI, 0, -Math.PI / 2]}
        scale={[-1, -0.196, -1]}
      >
        <MeshTransmissionMaterial
          thickness={0.5}
          chromaticAberration={0.05}
          anisotropy={1}
          clearcoat={0.5}
          clearcoatRoughness={0.2}
          envMapIntensity={1}
        />
      </mesh>

      <mesh
        name="cushion"
        castShadow
        receiveShadow
        geometry={nodes.cushion.geometry}
        material={materials.Material}
        position={[-0.515, 0, 0.008]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[0.554, 0.474, 0.554]}
      />
      <mesh
        name="base-extend"
        castShadow
        receiveShadow
        geometry={nodes["base-extend"].geometry}
        material={materials["Material.001"]}
        position={[-0.076, 1.575, 0]}
        rotation={[0, 0, 0.214]}
        scale={[-0.093, -0.423, -0.199]}
      />
      <mesh
        name="circle"
        castShadow
        receiveShadow
        geometry={nodes.circle.geometry}
        material={materials["Material.001"]}
        position={[-0.212, 0, 0]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.833, 1.039, 0.833]}
      ></mesh>

      <mesh
        name="blobs"
        ref={blobRef}
        castShadow
        receiveShadow
        geometry={nodes.blobs.geometry}
        position={[0, 0, 0.02]}
        scale={0.14}
      >
        <meshBasicMaterial color="pink" />
      </mesh>
    </group>
  );
}
